name: Deploy virtual WAN
concurrency: ${{ inputs.wan }}-${{ inputs.env }}

permissions:
  contents: read
  id-token: write

env:
  TF_INPUT: 0
  TF_IN_AUTOMATION: 1
  TF_ORGANIZATION: Terratron
  TF_WORKSPACE: wan-${{ inputs.wan }}-${{ inputs.env }}

on:
  workflow_dispatch:
    inputs:
      wan:
        required: true
        type: choice
        description: Virtual WAN name
        options:
          - eu
          - us
      env:
        required: true
        type: choice
        description: Virtual WAN environment
        options:
          - dev
          - test
          - live
      cfg:
        required: false
        type: string
        description: Configuration repository reference
        default: main

jobs:
  main:
    runs-on: ubuntu-latest
    environment:
      name: tfc
      url: ${{ steps.run.outputs.run_link }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: mdmsua/aks-cfg
          ref: ${{ inputs.cfg }}
          show-progress: false
      - id: variant
        working-directory: wans
        run: |
          spec=$(kustomize build overlays/$WAN | yq -o json | jq -rc '.spec')
          echo "spec=$spec" >> "$GITHUB_OUTPUT
          echo "version=$(echo $spec | jq -rc '.version')" >> "$GITHUB_OUTPUT"
        env:
          WAN: ${{ inputs.wan }}-${{ inputs.env }}
      - uses: actions/checkout@v4
        with:
          show-progress: false
          ref: ${{ steps.variant.outputs.version }}
      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}
      - run: |
          terraform init
          terraform validate
      - uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.2.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: .
          token: ${{ secrets.TFC_TOKEN }}
          organization: ${{ env.TF_ORGANIZATION }}
          speculative: false
      - uses: hashicorp/tfc-workflows-github/actions/create-run@v1.2.0
        id: run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          token: ${{ secrets.TFC_TOKEN }}
          organization: ${{ env.TF_ORGANIZATION }}
        env:
          TF_VAR_spec: ${{ steps.variant.outputs.spec }}